name: Backend CI/CD 

on:
  push:
    branches:
      - main
      - dev
      - beDev
  pull_request:
    branches:
      - main
      - dev
      - beDev

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'zulu'
    - name: Copy Secret
      env:
        OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
        OCCUPY_SECRET_DIR: Server/src/main/resources
        OCCUPY_SECRET_DIR_FILE_NAME: application-secret.yml
      run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME
    - name: Build with Gradle
      run: |
        cd Server
        chmod +x gradlew
        ./gradlew build
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    - name: Set up PEM Key
      env:
        PEM_KEY: ${{ secrets.PEM_KEY }}
      run: |
        echo "$PEM_KEY" > private_key.pem
        chmod 600 private_key.pem
    - name: Upload JAR to server using SCP
      run: |
        scp -i ./private_key.pem -o StrictHostKeyChecking=no Server/build/libs/Server-0.0.1-SNAPSHOT.jar ubuntu@ec2-43-201-249-199.ap-northeast-2.compute.amazonaws.com:/home/ubuntu/java
    - name: Execute Commands on EC2 through SSM
      run: |
        aws ssm send-command \
          --instance-ids i-030a9e1f26d25f685 \
          --document-name "AWS-RunShellScript" \
          --parameters commands='["pkill -f java", "sleep 30", "cd /home/ubuntu/java", "nohup java -jar -Dspring.profiles.active=production -Dspring.datasource.username=${{ secrets.DATASOURCE_USERNAME }} -Dspring.datasource.password=${{ secrets.DATASOURCE_PASSWORD }} Server-0.0.1-SNAPSHOT.jar > log.txt 2>&1 &", "sleep 5"]' \
          --output text
